name: Build and Deploy OIC Job

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0  # Utiliser la version v3

      - name: Set up Java
        uses: actions/setup-java@v4.4.0  # Utiliser la version v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Build with Maven
        run: mvn clean install

      - name: List target directory
        run:  |
          zip_file=$(ls target | grep '.iar' | head -n 1) # Récupère le premier fichier ZIP
          echo "ZIP file found: $zip_file"
          echo "zip_file=$zip_file" >> $GITHUB_ENV # Définit la variable d'environnement
          unzip -l target/${{ env.zip_file }} # Utilise la variable d'environnement
          target/${{ env.zip_file }}  # Utiliser la variable d'environnement avec le chemin exact du fichier

  create_release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4.4.0 
        with:
          name: my-oic-job

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v4.4.0 
        with:
          tag_name: v1.0.0
          release_name: "Release v1.0.0"
          body: "Release for version v1.0.0 of the OIC integration project."
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1.0.2 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target  # Spécifie le fichier .iar
          asset_name: my-oic-project-1.0.0-SNAPSHOT.iar  # Nom affiché dans la release
          asset_content_type: application/zip

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4.4.0   # Utiliser la version v3
        with:
          name: my-oic-job

      - name: Publish to Nexus Repository
        env:
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          NEXUS_URL:      ${{ vars.NEXUS_URL }}
        run: |
          curl -u $NEXUS_USERNAME:$NEXUS_PASSWORD \
            --upload-file target/${{ env.zip_file }} \
            $NEXUS_URL

  deploy:
    needs: publish
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production  # Utiliser un environnement pour les approbations

    steps:
      - name: Deploy to OIC
        env:
          OIC_USERNAME: ${{ secrets.OIC_USERNAME }}
          OIC_PASSWORD: ${{ secrets.OIC_PASSWORD }}
          OIC_INSTANCE_URL: ${{ secrets.OIC_INSTANCE_URL }}  # Assigner les secrets dans `env`
        run: |
          curl -u $OIC_USERNAME:$OIC_PASSWORD \
            -F "file=@target/my-oic-project-1.0.0-SNAPSHOT.iar" \
            -F "deploy=true" \
            $OIC_INSTANCE_URL/ic/api/integration/v1/deployments/
