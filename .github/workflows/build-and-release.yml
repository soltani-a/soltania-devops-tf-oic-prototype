name: Build and Release OIC Job

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0

      - name: Set up Java
        uses: actions/setup-java@v4.4.0
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Build with Maven Clean
        run: mvn clean

      - name: Build with Maven install
        run: mvn install

      - name: Build with Maven Package
        run: mvn package

      - name: Build with Maven Package
        run: mvn package

      - name: Rename ZIP to IAR
        run: |
          mv target/my-oic-project-1.0.0-SNAPSHOT-integration-archive.zip target/my-oic-project-1.0.0-SNAPSHOT.iar  # Renomme le fichier .zip en .iar
  
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: my-oic-job
          path: ${{ env.FILE }}  # Utiliser la variable d'environnement avec le chemin exact du fichier

  create_release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4.4.0 
        with:
          name: my-oic-job

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v4.4.0 
        with:
          tag_name: v1.0.0
          release_name: "Release v1.0.0"
          body: "Release for version v1.0.0 of the OIC integration project."
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1.0.2 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target  # Spécifie le fichier .iar
          asset_name: my-oic-project-1.0.0-SNAPSHOT.iar  # Nom affiché dans la release
          asset_content_type: application/zip
